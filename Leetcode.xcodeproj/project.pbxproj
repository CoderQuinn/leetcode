// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		E40E360524C2BCC8001DC2E2 /* MyStack.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40E360424C2BCC8001DC2E2 /* MyStack.cpp */; };
		E40E360924C2E16B001DC2E2 /* MinStack.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E40E360824C2E16B001DC2E2 /* MinStack.cpp */; };
		E414D4F924C7187C00DD41F3 /* AddTwoNumbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E414D4F824C7187C00DD41F3 /* AddTwoNumbers.cpp */; };
		E415BD1724CC96CA003D4899 /* ReverseString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E415BD1624CC96CA003D4899 /* ReverseString.cpp */; };
		E42C8F3324CFE553009979EE /* BinaryTreeLevelOrderTraversalII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E42C8F3224CFE553009979EE /* BinaryTreeLevelOrderTraversalII.cpp */; };
		E42C8F3624CFED05009979EE /* ConstructBinaryTreefromInorderandPostorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E42C8F3524CFED05009979EE /* ConstructBinaryTreefromInorderandPostorderTraversal.cpp */; };
		E42C8F3924D00AC4009979EE /* ConstructBinaryTreefromPreorderandInorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E42C8F3824D00AC4009979EE /* ConstructBinaryTreefromPreorderandInorderTraversal.cpp */; };
		E42C8F3C24D01A22009979EE /* PopulatingNextRightPointersinEachNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E42C8F3B24D01A22009979EE /* PopulatingNextRightPointersinEachNode.cpp */; };
		E42C8F3F24D03374009979EE /* PopulatingNextRightPointersinEachNodeII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E42C8F3E24D03374009979EE /* PopulatingNextRightPointersinEachNodeII.cpp */; };
		E42C8F4224D05E4D009979EE /* LowestCommonAncestorofaBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E42C8F4124D05E4D009979EE /* LowestCommonAncestorofaBinaryTree.cpp */; };
		E44664E924C0EF360008DCEE /* RemoveDuplicatesfromSortedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E44664E824C0EF360008DCEE /* RemoveDuplicatesfromSortedList.cpp */; };
		E44664EF24C20CAB0008DCEE /* MyQueue.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E44664EE24C20CAB0008DCEE /* MyQueue.cpp */; };
		E45322A224CD0C9800067CC4 /* BinaryTreePreorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322A124CD0C9800067CC4 /* BinaryTreePreorderTraversal.cpp */; };
		E45322A724CD1BB400067CC4 /* BinaryTreeInorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322A624CD1BB400067CC4 /* BinaryTreeInorderTraversal.cpp */; };
		E45322AA24CD201F00067CC4 /* BinaryTreePostorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322A924CD201F00067CC4 /* BinaryTreePostorderTraversal.cpp */; };
		E45322AD24CD619800067CC4 /* BinaryTreeLevelOrderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322AC24CD619800067CC4 /* BinaryTreeLevelOrderTraversal.cpp */; };
		E45322B024CE011E00067CC4 /* MaximumDepthofBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322AF24CE011E00067CC4 /* MaximumDepthofBinaryTree.cpp */; };
		E45322B324CE116700067CC4 /* MinimumDepthofBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322B224CE116700067CC4 /* MinimumDepthofBinaryTree.cpp */; };
		E45322B624CEC35500067CC4 /* SymmetricTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322B524CEC35500067CC4 /* SymmetricTree.cpp */; };
		E45322B924CED49300067CC4 /* PathSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45322B824CED49300067CC4 /* PathSum.cpp */; };
		E4553CD124BEDD41002A69D3 /* FlattenaMultilevelDoublyLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4553CD024BEDD41002A69D3 /* FlattenaMultilevelDoublyLinkedList.cpp */; };
		E4553CD424BEFD62002A69D3 /* CopyListwithRandomPointer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4553CD324BEFD62002A69D3 /* CopyListwithRandomPointer.cpp */; };
		E45BF78524B9857D0051A649 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF78424B9857D0051A649 /* main.cpp */; };
		E45BF78E24B985C50051A649 /* ReverseLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF78C24B985C50051A649 /* ReverseLinkedList.cpp */; };
		E45BF79224B9903E0051A649 /* Reverse Linked List II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF79024B9903E0051A649 /* Reverse Linked List II.cpp */; };
		E45BF79624B9AAC30051A649 /* Intersection of Two Linked Lists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF79524B9AAC30051A649 /* Intersection of Two Linked Lists.cpp */; };
		E45BF7D424BB6DBD0051A649 /* LinkedListCycle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7D224BB6DBD0051A649 /* LinkedListCycle.cpp */; };
		E45BF7D624BB6F600051A649 /* LinkedListCycleII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7D524BB6F600051A649 /* LinkedListCycleII.cpp */; };
		E45BF7D924BC52AC0051A649 /* RemoveNthNodeFromEndofList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7D824BC52AC0051A649 /* RemoveNthNodeFromEndofList.cpp */; };
		E45BF7DC24BC636B0051A649 /* RemoveLinkedListElements.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7DB24BC636B0051A649 /* RemoveLinkedListElements.cpp */; };
		E45BF7DF24BC76A60051A649 /* OddEvenLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7DE24BC76A60051A649 /* OddEvenLinkedList.cpp */; };
		E45BF7E224BC84B60051A649 /* PalindromeLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7E124BC84B60051A649 /* PalindromeLinkedList.cpp */; };
		E45BF7E524BC9B040051A649 /* DesignLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7E424BC9B040051A649 /* DesignLinkedList.cpp */; };
		E45BF7E824BD89D30051A649 /* MergeTwoSortedLists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7E724BD89D30051A649 /* MergeTwoSortedLists.cpp */; };
		E45BF7EB24BDA0AC0051A649 /* AddTwoNumbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7EA24BDA0AC0051A649 /* AddTwoNumbers.cpp */; };
		E45BF7ED24BDDE0E0051A649 /* RotateList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E45BF7EC24BDDE0E0051A649 /* RotateList.cpp */; };
		E4C4530A24C98B7100E3C956 /* SwapNodesinPairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4C4530924C98B7100E3C956 /* SwapNodesinPairs.cpp */; };
		E4C4530E24C9AC9600E3C956 /* ValidateStackSequences.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4C4530D24C9AC9600E3C956 /* ValidateStackSequences.cpp */; };
		E4C4531324C9CDFE00E3C956 /* BasicCalculator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4C4531224C9CDFE00E3C956 /* BasicCalculator.cpp */; };
		E4C4531624CA094D00E3C956 /* EvaluateReversePolishNotation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4C4531524CA094D00E3C956 /* EvaluateReversePolishNotation.cpp */; };
		E4ECFDB724D1C5060035C59A /* SerializeandDeserializeBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4ECFDB624D1C5060035C59A /* SerializeandDeserializeBinaryTree.cpp */; };
		E4EF837524BF34F200D42D2C /* PartitionList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4EF837424BF34F200D42D2C /* PartitionList.cpp */; };
		E4F027F024D3062D00039E02 /* IntegerBreak.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4F027EF24D3062D00039E02 /* IntegerBreak.cpp */; };
		E4F0280824D34AB500039E02 /* Valid Parentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4F0280724D34AB500039E02 /* Valid Parentheses.cpp */; };
		E4F0280C24D3578100039E02 /* DailyTemperatures.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4F0280B24D3578100039E02 /* DailyTemperatures.cpp */; };
		E4F5471A24CAE1310079E871 /* DesignCircularQueue.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4F5471924CAE1310079E871 /* DesignCircularQueue.cpp */; };
		E4F5471D24CB137E0079E871 /* KthLargestElementinanArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4F5471C24CB137E0079E871 /* KthLargestElementinanArray.cpp */; };
		E4F5472024CB2EB60079E871 /* FindMedianFromDataStream.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4F5471F24CB2EB60079E871 /* FindMedianFromDataStream.cpp */; };
		E4F5472324CB379F0079E871 /* AssignCookies.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E4F5472224CB379F0079E871 /* AssignCookies.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		E45BF77F24B9857D0051A649 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		E40E360424C2BCC8001DC2E2 /* MyStack.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MyStack.cpp; sourceTree = "<group>"; };
		E40E360824C2E16B001DC2E2 /* MinStack.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MinStack.cpp; sourceTree = "<group>"; };
		E414D4F824C7187C00DD41F3 /* AddTwoNumbers.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AddTwoNumbers.cpp; sourceTree = "<group>"; };
		E415BD1624CC96CA003D4899 /* ReverseString.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReverseString.cpp; sourceTree = "<group>"; };
		E42C8F3224CFE553009979EE /* BinaryTreeLevelOrderTraversalII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreeLevelOrderTraversalII.cpp; sourceTree = "<group>"; };
		E42C8F3524CFED05009979EE /* ConstructBinaryTreefromInorderandPostorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ConstructBinaryTreefromInorderandPostorderTraversal.cpp; sourceTree = "<group>"; };
		E42C8F3824D00AC4009979EE /* ConstructBinaryTreefromPreorderandInorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ConstructBinaryTreefromPreorderandInorderTraversal.cpp; sourceTree = "<group>"; };
		E42C8F3B24D01A22009979EE /* PopulatingNextRightPointersinEachNode.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PopulatingNextRightPointersinEachNode.cpp; sourceTree = "<group>"; };
		E42C8F3E24D03374009979EE /* PopulatingNextRightPointersinEachNodeII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PopulatingNextRightPointersinEachNodeII.cpp; sourceTree = "<group>"; };
		E42C8F4124D05E4D009979EE /* LowestCommonAncestorofaBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LowestCommonAncestorofaBinaryTree.cpp; sourceTree = "<group>"; };
		E44664E824C0EF360008DCEE /* RemoveDuplicatesfromSortedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveDuplicatesfromSortedList.cpp; sourceTree = "<group>"; };
		E44664EE24C20CAB0008DCEE /* MyQueue.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MyQueue.cpp; sourceTree = "<group>"; };
		E45322A124CD0C9800067CC4 /* BinaryTreePreorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreePreorderTraversal.cpp; sourceTree = "<group>"; };
		E45322A424CD0D2E00067CC4 /* TreeNode.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TreeNode.h; sourceTree = "<group>"; };
		E45322A624CD1BB400067CC4 /* BinaryTreeInorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreeInorderTraversal.cpp; sourceTree = "<group>"; };
		E45322A924CD201F00067CC4 /* BinaryTreePostorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreePostorderTraversal.cpp; sourceTree = "<group>"; };
		E45322AC24CD619800067CC4 /* BinaryTreeLevelOrderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreeLevelOrderTraversal.cpp; sourceTree = "<group>"; };
		E45322AF24CE011E00067CC4 /* MaximumDepthofBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MaximumDepthofBinaryTree.cpp; sourceTree = "<group>"; };
		E45322B224CE116700067CC4 /* MinimumDepthofBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumDepthofBinaryTree.cpp; sourceTree = "<group>"; };
		E45322B524CEC35500067CC4 /* SymmetricTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SymmetricTree.cpp; sourceTree = "<group>"; };
		E45322B824CED49300067CC4 /* PathSum.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PathSum.cpp; sourceTree = "<group>"; };
		E4553CD024BEDD41002A69D3 /* FlattenaMultilevelDoublyLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FlattenaMultilevelDoublyLinkedList.cpp; sourceTree = "<group>"; };
		E4553CD324BEFD62002A69D3 /* CopyListwithRandomPointer.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CopyListwithRandomPointer.cpp; sourceTree = "<group>"; };
		E45BF78124B9857D0051A649 /* Leetcode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Leetcode; sourceTree = BUILT_PRODUCTS_DIR; };
		E45BF78424B9857D0051A649 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		E45BF78C24B985C50051A649 /* ReverseLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReverseLinkedList.cpp; sourceTree = "<group>"; };
		E45BF79024B9903E0051A649 /* Reverse Linked List II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Reverse Linked List II.cpp"; sourceTree = "<group>"; };
		E45BF79524B9AAC30051A649 /* Intersection of Two Linked Lists.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Intersection of Two Linked Lists.cpp"; sourceTree = "<group>"; };
		E45BF79724B9AB9D0051A649 /* ListNode.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ListNode.h; sourceTree = "<group>"; };
		E45BF7D224BB6DBD0051A649 /* LinkedListCycle.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LinkedListCycle.cpp; sourceTree = "<group>"; };
		E45BF7D524BB6F600051A649 /* LinkedListCycleII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LinkedListCycleII.cpp; sourceTree = "<group>"; };
		E45BF7D824BC52AC0051A649 /* RemoveNthNodeFromEndofList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveNthNodeFromEndofList.cpp; sourceTree = "<group>"; };
		E45BF7DB24BC636B0051A649 /* RemoveLinkedListElements.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveLinkedListElements.cpp; sourceTree = "<group>"; };
		E45BF7DE24BC76A60051A649 /* OddEvenLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = OddEvenLinkedList.cpp; sourceTree = "<group>"; };
		E45BF7E124BC84B60051A649 /* PalindromeLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PalindromeLinkedList.cpp; sourceTree = "<group>"; };
		E45BF7E424BC9B040051A649 /* DesignLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DesignLinkedList.cpp; sourceTree = "<group>"; };
		E45BF7E724BD89D30051A649 /* MergeTwoSortedLists.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MergeTwoSortedLists.cpp; sourceTree = "<group>"; };
		E45BF7EA24BDA0AC0051A649 /* AddTwoNumbers.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AddTwoNumbers.cpp; sourceTree = "<group>"; };
		E45BF7EC24BDDE0E0051A649 /* RotateList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RotateList.cpp; sourceTree = "<group>"; };
		E4C4530924C98B7100E3C956 /* SwapNodesinPairs.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SwapNodesinPairs.cpp; sourceTree = "<group>"; };
		E4C4530D24C9AC9600E3C956 /* ValidateStackSequences.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ValidateStackSequences.cpp; sourceTree = "<group>"; };
		E4C4531224C9CDFE00E3C956 /* BasicCalculator.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BasicCalculator.cpp; sourceTree = "<group>"; };
		E4C4531524CA094D00E3C956 /* EvaluateReversePolishNotation.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = EvaluateReversePolishNotation.cpp; sourceTree = "<group>"; };
		E4ECFDB624D1C5060035C59A /* SerializeandDeserializeBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SerializeandDeserializeBinaryTree.cpp; sourceTree = "<group>"; };
		E4EF837424BF34F200D42D2C /* PartitionList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PartitionList.cpp; sourceTree = "<group>"; };
		E4F027EF24D3062D00039E02 /* IntegerBreak.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = IntegerBreak.cpp; sourceTree = "<group>"; };
		E4F0280724D34AB500039E02 /* Valid Parentheses.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Valid Parentheses.cpp"; sourceTree = "<group>"; };
		E4F0280B24D3578100039E02 /* DailyTemperatures.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DailyTemperatures.cpp; sourceTree = "<group>"; };
		E4F5471924CAE1310079E871 /* DesignCircularQueue.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DesignCircularQueue.cpp; sourceTree = "<group>"; };
		E4F5471C24CB137E0079E871 /* KthLargestElementinanArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = KthLargestElementinanArray.cpp; path = "heap/215 Kth Largest Element in an Array/KthLargestElementinanArray.cpp"; sourceTree = SOURCE_ROOT; };
		E4F5471F24CB2EB60079E871 /* FindMedianFromDataStream.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindMedianFromDataStream.cpp; sourceTree = "<group>"; };
		E4F5472224CB379F0079E871 /* AssignCookies.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AssignCookies.cpp; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		E45BF77E24B9857D0051A649 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		E40E360324C2BCA6001DC2E2 /* 225 Implement Stack using Queues */ = {
			isa = PBXGroup;
			children = (
				E40E360424C2BCC8001DC2E2 /* MyStack.cpp */,
			);
			path = "225 Implement Stack using Queues";
			sourceTree = "<group>";
		};
		E40E360624C2E0C1001DC2E2 /* stack and queue */ = {
			isa = PBXGroup;
			children = (
				E4F0280924D34AB900039E02 /* 20 Valid Parentheses */,
				E4C4531424CA092500E3C956 /* 150 Evaluate Reverse Polish Notation */,
				E40E360724C2E14C001DC2E2 /* 155 Min Stack */,
				E44664ED24C204240008DCEE /* 232 Implement Queue using Stacks */,
				E4C4531124C9B67500E3C956 /* 224 Basic Calculator */,
				E40E360324C2BCA6001DC2E2 /* 225 Implement Stack using Queues */,
				E4F0280D24D3613900039E02 /* 394 Decode String */,
				E4F5471824CAE0F30079E871 /* 622 Design Circular Queue */,
				E4F0280A24D3575D00039E02 /* 739 Daily Temperatures */,
				E4C4530C24C9AC6200E3C956 /* 946 Validate Stack Sequences */,
			);
			path = "stack and queue";
			sourceTree = "<group>";
		};
		E40E360724C2E14C001DC2E2 /* 155 Min Stack */ = {
			isa = PBXGroup;
			children = (
				E40E360824C2E16B001DC2E2 /* MinStack.cpp */,
			);
			path = "155 Min Stack";
			sourceTree = "<group>";
		};
		E414D4F624C711CC00DD41F3 /* 445 Add Two Numbers II */ = {
			isa = PBXGroup;
			children = (
				E414D4F824C7187C00DD41F3 /* AddTwoNumbers.cpp */,
			);
			path = "445 Add Two Numbers II";
			sourceTree = "<group>";
		};
		E415BD1824CC96DD003D4899 /* 344 Reverse String */ = {
			isa = PBXGroup;
			children = (
				E415BD1624CC96CA003D4899 /* ReverseString.cpp */,
			);
			path = "344 Reverse String";
			sourceTree = "<group>";
		};
		E42C8F3124CFE52E009979EE /* 107 Binary Tree Level Order Traversal II */ = {
			isa = PBXGroup;
			children = (
				E42C8F3224CFE553009979EE /* BinaryTreeLevelOrderTraversalII.cpp */,
			);
			path = "107 Binary Tree Level Order Traversal II";
			sourceTree = "<group>";
		};
		E42C8F3424CFECC2009979EE /* 106 Construct Binary Tree from Inorder and Postorder Traversal */ = {
			isa = PBXGroup;
			children = (
				E42C8F3524CFED05009979EE /* ConstructBinaryTreefromInorderandPostorderTraversal.cpp */,
			);
			path = "106 Construct Binary Tree from Inorder and Postorder Traversal";
			sourceTree = "<group>";
		};
		E42C8F3724D00A9D009979EE /* 105 Construct Binary Tree from Preorder and Inorder Traversal */ = {
			isa = PBXGroup;
			children = (
				E42C8F3824D00AC4009979EE /* ConstructBinaryTreefromPreorderandInorderTraversal.cpp */,
			);
			path = "105 Construct Binary Tree from Preorder and Inorder Traversal";
			sourceTree = "<group>";
		};
		E42C8F3A24D019FB009979EE /* 116 Populating Next Right Pointers in Each Node */ = {
			isa = PBXGroup;
			children = (
				E42C8F3B24D01A22009979EE /* PopulatingNextRightPointersinEachNode.cpp */,
			);
			path = "116 Populating Next Right Pointers in Each Node";
			sourceTree = "<group>";
		};
		E42C8F3D24D03349009979EE /* 117 Populating Next Right Pointers in Each Node II */ = {
			isa = PBXGroup;
			children = (
				E42C8F3E24D03374009979EE /* PopulatingNextRightPointersinEachNodeII.cpp */,
			);
			path = "117 Populating Next Right Pointers in Each Node II";
			sourceTree = "<group>";
		};
		E42C8F4024D05E05009979EE /* 236 Lowest Common Ancestor of a Binary Tree */ = {
			isa = PBXGroup;
			children = (
				E42C8F4124D05E4D009979EE /* LowestCommonAncestorofaBinaryTree.cpp */,
			);
			path = "236 Lowest Common Ancestor of a Binary Tree";
			sourceTree = "<group>";
		};
		E44664E724C0EEF60008DCEE /* 83 Remove Duplicates from Sorted List */ = {
			isa = PBXGroup;
			children = (
				E44664E824C0EF360008DCEE /* RemoveDuplicatesfromSortedList.cpp */,
			);
			path = "83 Remove Duplicates from Sorted List";
			sourceTree = "<group>";
		};
		E44664ED24C204240008DCEE /* 232 Implement Queue using Stacks */ = {
			isa = PBXGroup;
			children = (
				E44664EE24C20CAB0008DCEE /* MyQueue.cpp */,
			);
			path = "232 Implement Queue using Stacks";
			sourceTree = "<group>";
		};
		E45322A024CD0C4A00067CC4 /* tree */ = {
			isa = PBXGroup;
			children = (
				E45322A424CD0D2E00067CC4 /* TreeNode.h */,
				E45322A524CD1B8E00067CC4 /* 94 Binary Tree Inorder Traversal */,
				E45322B424CEC1FB00067CC4 /* 101 Symmetric Tree */,
				E45322AB24CD616600067CC4 /* 102 BinaryTreeLevelOrderTraversal */,
				E45322AE24CE00C300067CC4 /* 104 Maximum Depth of Binary Tree */,
				E42C8F3724D00A9D009979EE /* 105 Construct Binary Tree from Preorder and Inorder Traversal */,
				E42C8F3424CFECC2009979EE /* 106 Construct Binary Tree from Inorder and Postorder Traversal */,
				E42C8F3124CFE52E009979EE /* 107 Binary Tree Level Order Traversal II */,
				E45322B124CE114A00067CC4 /* 111 Minimum Depth of Binary Tree */,
				E45322B724CED3F000067CC4 /* 112 Path Sum */,
				E42C8F3A24D019FB009979EE /* 116 Populating Next Right Pointers in Each Node */,
				E42C8F3D24D03349009979EE /* 117 Populating Next Right Pointers in Each Node II */,
				E45322A324CD0CB200067CC4 /* 144 Binary Tree Preorder Traversal */,
				E45322A824CD1FD900067CC4 /* 145 Binary Tree Postorder Traversal */,
				E42C8F4024D05E05009979EE /* 236 Lowest Common Ancestor of a Binary Tree */,
				E4ECFDB524D1C49A0035C59A /* 297 Serialize and Deserialize Binary Tree */,
			);
			path = tree;
			sourceTree = "<group>";
		};
		E45322A324CD0CB200067CC4 /* 144 Binary Tree Preorder Traversal */ = {
			isa = PBXGroup;
			children = (
				E45322A124CD0C9800067CC4 /* BinaryTreePreorderTraversal.cpp */,
			);
			path = "144 Binary Tree Preorder Traversal";
			sourceTree = "<group>";
		};
		E45322A524CD1B8E00067CC4 /* 94 Binary Tree Inorder Traversal */ = {
			isa = PBXGroup;
			children = (
				E45322A624CD1BB400067CC4 /* BinaryTreeInorderTraversal.cpp */,
			);
			path = "94 Binary Tree Inorder Traversal";
			sourceTree = "<group>";
		};
		E45322A824CD1FD900067CC4 /* 145 Binary Tree Postorder Traversal */ = {
			isa = PBXGroup;
			children = (
				E45322A924CD201F00067CC4 /* BinaryTreePostorderTraversal.cpp */,
			);
			path = "145 Binary Tree Postorder Traversal";
			sourceTree = "<group>";
		};
		E45322AB24CD616600067CC4 /* 102 BinaryTreeLevelOrderTraversal */ = {
			isa = PBXGroup;
			children = (
				E45322AC24CD619800067CC4 /* BinaryTreeLevelOrderTraversal.cpp */,
			);
			path = "102 BinaryTreeLevelOrderTraversal";
			sourceTree = "<group>";
		};
		E45322AE24CE00C300067CC4 /* 104 Maximum Depth of Binary Tree */ = {
			isa = PBXGroup;
			children = (
				E45322AF24CE011E00067CC4 /* MaximumDepthofBinaryTree.cpp */,
			);
			path = "104 Maximum Depth of Binary Tree";
			sourceTree = "<group>";
		};
		E45322B124CE114A00067CC4 /* 111 Minimum Depth of Binary Tree */ = {
			isa = PBXGroup;
			children = (
				E45322B224CE116700067CC4 /* MinimumDepthofBinaryTree.cpp */,
			);
			path = "111 Minimum Depth of Binary Tree";
			sourceTree = "<group>";
		};
		E45322B424CEC1FB00067CC4 /* 101 Symmetric Tree */ = {
			isa = PBXGroup;
			children = (
				E45322B524CEC35500067CC4 /* SymmetricTree.cpp */,
			);
			path = "101 Symmetric Tree";
			sourceTree = "<group>";
		};
		E45322B724CED3F000067CC4 /* 112 Path Sum */ = {
			isa = PBXGroup;
			children = (
				E45322B824CED49300067CC4 /* PathSum.cpp */,
			);
			path = "112 Path Sum";
			sourceTree = "<group>";
		};
		E4553CCF24BEDC9B002A69D3 /* 430 Flattena Multilevel Doubly Linked List */ = {
			isa = PBXGroup;
			children = (
				E4553CD024BEDD41002A69D3 /* FlattenaMultilevelDoublyLinkedList.cpp */,
			);
			path = "430 Flattena Multilevel Doubly Linked List";
			sourceTree = "<group>";
		};
		E4553CD224BEFD36002A69D3 /* 138 Copy List with Random Pointer */ = {
			isa = PBXGroup;
			children = (
				E4553CD324BEFD62002A69D3 /* CopyListwithRandomPointer.cpp */,
			);
			path = "138 Copy List with Random Pointer";
			sourceTree = "<group>";
		};
		E45BF77824B9857D0051A649 = {
			isa = PBXGroup;
			children = (
				E4F027EE24D3059300039E02 /* dynamic programming */,
				E45322A024CD0C4A00067CC4 /* tree */,
				E4EE5EB124CC299A00C6F04E /* recursion */,
				E45BF79324B9912B0051A649 /* list */,
				E40E360624C2E0C1001DC2E2 /* stack and queue */,
				E4C4530B24C99F2B00E3C956 /* heap */,
				E4C4531024C9B57F00E3C956 /* greedy */,
				E45BF78324B9857D0051A649 /* Leetcode */,
				E45BF78224B9857D0051A649 /* Products */,
			);
			sourceTree = "<group>";
		};
		E45BF78224B9857D0051A649 /* Products */ = {
			isa = PBXGroup;
			children = (
				E45BF78124B9857D0051A649 /* Leetcode */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E45BF78324B9857D0051A649 /* Leetcode */ = {
			isa = PBXGroup;
			children = (
				E45BF78424B9857D0051A649 /* main.cpp */,
			);
			path = Leetcode;
			sourceTree = "<group>";
		};
		E45BF78B24B985860051A649 /* 206 Reverse Linked List */ = {
			isa = PBXGroup;
			children = (
				E45BF78C24B985C50051A649 /* ReverseLinkedList.cpp */,
			);
			path = "206 Reverse Linked List";
			sourceTree = "<group>";
		};
		E45BF78F24B98EB80051A649 /* 92 Reverse Linked List II */ = {
			isa = PBXGroup;
			children = (
				E45BF79024B9903E0051A649 /* Reverse Linked List II.cpp */,
			);
			path = "92 Reverse Linked List II";
			sourceTree = "<group>";
		};
		E45BF79324B9912B0051A649 /* list */ = {
			isa = PBXGroup;
			children = (
				E45BF79724B9AB9D0051A649 /* ListNode.h */,
				E45BF7E924BDA07B0051A649 /* 2 Add Two Numbers */,
				E45BF7D724BC52730051A649 /* 19 Remove Nth Node From End of List */,
				E45BF7E624BD89B80051A649 /* 21 Merge Two Sorted Lists */,
				E4C4530824C9892100E3C956 /* 24 Swap Nodes in Pairs */,
				E45BF7EE24BDDE1B0051A649 /* 61 Rotate List */,
				E44664E724C0EEF60008DCEE /* 83 Remove Duplicates from Sorted List */,
				E4EF837324BF34D000D42D2C /* 86 Partition List */,
				E45BF78F24B98EB80051A649 /* 92 Reverse Linked List II */,
				E4553CD224BEFD36002A69D3 /* 138 Copy List with Random Pointer */,
				E45BF7CE24BB69BB0051A649 /* 141 Linked List Cycle */,
				E45BF7D124BB69D60051A649 /* 142 Linked List Cycle II */,
				E45BF79424B9AA890051A649 /* 160 Intersection of Two Linked Lists */,
				E45BF7DA24BC63490051A649 /* 203 Remove Linked List Elements */,
				E45BF78B24B985860051A649 /* 206 Reverse Linked List */,
				E45BF7E024BC84640051A649 /* 234 Palindrome Linked List */,
				E45BF7DD24BC768A0051A649 /* 328 Odd Even Linked List */,
				E4553CCF24BEDC9B002A69D3 /* 430 Flattena Multilevel Doubly Linked List */,
				E414D4F624C711CC00DD41F3 /* 445 Add Two Numbers II */,
				E45BF7E324BC9A9D0051A649 /* 707 Design Linked List */,
			);
			path = list;
			sourceTree = "<group>";
		};
		E45BF79424B9AA890051A649 /* 160 Intersection of Two Linked Lists */ = {
			isa = PBXGroup;
			children = (
				E45BF79524B9AAC30051A649 /* Intersection of Two Linked Lists.cpp */,
			);
			path = "160 Intersection of Two Linked Lists";
			sourceTree = "<group>";
		};
		E45BF7CE24BB69BB0051A649 /* 141 Linked List Cycle */ = {
			isa = PBXGroup;
			children = (
				E45BF7D224BB6DBD0051A649 /* LinkedListCycle.cpp */,
			);
			path = "141 Linked List Cycle";
			sourceTree = "<group>";
		};
		E45BF7D124BB69D60051A649 /* 142 Linked List Cycle II */ = {
			isa = PBXGroup;
			children = (
				E45BF7D524BB6F600051A649 /* LinkedListCycleII.cpp */,
			);
			path = "142 Linked List Cycle II";
			sourceTree = "<group>";
		};
		E45BF7D724BC52730051A649 /* 19 Remove Nth Node From End of List */ = {
			isa = PBXGroup;
			children = (
				E45BF7D824BC52AC0051A649 /* RemoveNthNodeFromEndofList.cpp */,
			);
			path = "19 Remove Nth Node From End of List";
			sourceTree = "<group>";
		};
		E45BF7DA24BC63490051A649 /* 203 Remove Linked List Elements */ = {
			isa = PBXGroup;
			children = (
				E45BF7DB24BC636B0051A649 /* RemoveLinkedListElements.cpp */,
			);
			path = "203 Remove Linked List Elements";
			sourceTree = "<group>";
		};
		E45BF7DD24BC768A0051A649 /* 328 Odd Even Linked List */ = {
			isa = PBXGroup;
			children = (
				E45BF7DE24BC76A60051A649 /* OddEvenLinkedList.cpp */,
			);
			path = "328 Odd Even Linked List";
			sourceTree = "<group>";
		};
		E45BF7E024BC84640051A649 /* 234 Palindrome Linked List */ = {
			isa = PBXGroup;
			children = (
				E45BF7E124BC84B60051A649 /* PalindromeLinkedList.cpp */,
			);
			path = "234 Palindrome Linked List";
			sourceTree = "<group>";
		};
		E45BF7E324BC9A9D0051A649 /* 707 Design Linked List */ = {
			isa = PBXGroup;
			children = (
				E45BF7E424BC9B040051A649 /* DesignLinkedList.cpp */,
			);
			path = "707 Design Linked List";
			sourceTree = "<group>";
		};
		E45BF7E624BD89B80051A649 /* 21 Merge Two Sorted Lists */ = {
			isa = PBXGroup;
			children = (
				E45BF7E724BD89D30051A649 /* MergeTwoSortedLists.cpp */,
			);
			path = "21 Merge Two Sorted Lists";
			sourceTree = "<group>";
		};
		E45BF7E924BDA07B0051A649 /* 2 Add Two Numbers */ = {
			isa = PBXGroup;
			children = (
				E45BF7EA24BDA0AC0051A649 /* AddTwoNumbers.cpp */,
			);
			path = "2 Add Two Numbers";
			sourceTree = "<group>";
		};
		E45BF7EE24BDDE1B0051A649 /* 61 Rotate List */ = {
			isa = PBXGroup;
			children = (
				E45BF7EC24BDDE0E0051A649 /* RotateList.cpp */,
			);
			path = "61 Rotate List";
			sourceTree = "<group>";
		};
		E4C4530824C9892100E3C956 /* 24 Swap Nodes in Pairs */ = {
			isa = PBXGroup;
			children = (
				E4C4530924C98B7100E3C956 /* SwapNodesinPairs.cpp */,
			);
			path = "24 Swap Nodes in Pairs";
			sourceTree = "<group>";
		};
		E4C4530B24C99F2B00E3C956 /* heap */ = {
			isa = PBXGroup;
			children = (
				E4F5471B24CB13040079E871 /* 215 Kth Largest Element in an Array */,
				E4F5471E24CB2E560079E871 /* 295 Find Median from Data Stream */,
			);
			path = heap;
			sourceTree = "<group>";
		};
		E4C4530C24C9AC6200E3C956 /* 946 Validate Stack Sequences */ = {
			isa = PBXGroup;
			children = (
				E4C4530D24C9AC9600E3C956 /* ValidateStackSequences.cpp */,
			);
			path = "946 Validate Stack Sequences";
			sourceTree = "<group>";
		};
		E4C4530F24C9B47F00E3C956 /* 402 Remove K Digits */ = {
			isa = PBXGroup;
			children = (
			);
			path = "402 Remove K Digits";
			sourceTree = "<group>";
		};
		E4C4531024C9B57F00E3C956 /* greedy */ = {
			isa = PBXGroup;
			children = (
				E4C4530F24C9B47F00E3C956 /* 402 Remove K Digits */,
				E4F5472124CB37730079E871 /* 455 AssignCookies */,
			);
			path = greedy;
			sourceTree = "<group>";
		};
		E4C4531124C9B67500E3C956 /* 224 Basic Calculator */ = {
			isa = PBXGroup;
			children = (
				E4C4531224C9CDFE00E3C956 /* BasicCalculator.cpp */,
			);
			path = "224 Basic Calculator";
			sourceTree = "<group>";
		};
		E4C4531424CA092500E3C956 /* 150 Evaluate Reverse Polish Notation */ = {
			isa = PBXGroup;
			children = (
				E4C4531524CA094D00E3C956 /* EvaluateReversePolishNotation.cpp */,
			);
			path = "150 Evaluate Reverse Polish Notation";
			sourceTree = "<group>";
		};
		E4ECFDB524D1C49A0035C59A /* 297 Serialize and Deserialize Binary Tree */ = {
			isa = PBXGroup;
			children = (
				E4ECFDB624D1C5060035C59A /* SerializeandDeserializeBinaryTree.cpp */,
			);
			path = "297 Serialize and Deserialize Binary Tree";
			sourceTree = "<group>";
		};
		E4EE5EB124CC299A00C6F04E /* recursion */ = {
			isa = PBXGroup;
			children = (
				E415BD1824CC96DD003D4899 /* 344 Reverse String */,
			);
			path = recursion;
			sourceTree = "<group>";
		};
		E4EF837324BF34D000D42D2C /* 86 Partition List */ = {
			isa = PBXGroup;
			children = (
				E4EF837424BF34F200D42D2C /* PartitionList.cpp */,
			);
			path = "86 Partition List";
			sourceTree = "<group>";
		};
		E4F027ED24D3056000039E02 /* 343 Integer Break */ = {
			isa = PBXGroup;
			children = (
				E4F027EF24D3062D00039E02 /* IntegerBreak.cpp */,
			);
			path = "343 Integer Break";
			sourceTree = "<group>";
		};
		E4F027EE24D3059300039E02 /* dynamic programming */ = {
			isa = PBXGroup;
			children = (
				E4F027ED24D3056000039E02 /* 343 Integer Break */,
			);
			path = "dynamic programming";
			sourceTree = "<group>";
		};
		E4F0280924D34AB900039E02 /* 20 Valid Parentheses */ = {
			isa = PBXGroup;
			children = (
				E4F0280724D34AB500039E02 /* Valid Parentheses.cpp */,
			);
			path = "20 Valid Parentheses";
			sourceTree = "<group>";
		};
		E4F0280A24D3575D00039E02 /* 739 Daily Temperatures */ = {
			isa = PBXGroup;
			children = (
				E4F0280B24D3578100039E02 /* DailyTemperatures.cpp */,
			);
			path = "739 Daily Temperatures";
			sourceTree = "<group>";
		};
		E4F0280D24D3613900039E02 /* 394 Decode String */ = {
			isa = PBXGroup;
			children = (
			);
			path = "394 Decode String";
			sourceTree = "<group>";
		};
		E4F5471824CAE0F30079E871 /* 622 Design Circular Queue */ = {
			isa = PBXGroup;
			children = (
				E4F5471924CAE1310079E871 /* DesignCircularQueue.cpp */,
			);
			path = "622 Design Circular Queue";
			sourceTree = "<group>";
		};
		E4F5471B24CB13040079E871 /* 215 Kth Largest Element in an Array */ = {
			isa = PBXGroup;
			children = (
				E4F5471C24CB137E0079E871 /* KthLargestElementinanArray.cpp */,
			);
			path = "215 Kth Largest Element in an Array";
			sourceTree = "<group>";
		};
		E4F5471E24CB2E560079E871 /* 295 Find Median from Data Stream */ = {
			isa = PBXGroup;
			children = (
				E4F5471F24CB2EB60079E871 /* FindMedianFromDataStream.cpp */,
			);
			path = "295 Find Median from Data Stream";
			sourceTree = "<group>";
		};
		E4F5472124CB37730079E871 /* 455 AssignCookies */ = {
			isa = PBXGroup;
			children = (
				E4F5472224CB379F0079E871 /* AssignCookies.cpp */,
			);
			path = "455 AssignCookies";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		E45BF78024B9857D0051A649 /* Leetcode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E45BF78824B9857D0051A649 /* Build configuration list for PBXNativeTarget "Leetcode" */;
			buildPhases = (
				E45BF77D24B9857D0051A649 /* Sources */,
				E45BF77E24B9857D0051A649 /* Frameworks */,
				E45BF77F24B9857D0051A649 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Leetcode;
			productName = Leetcode;
			productReference = E45BF78124B9857D0051A649 /* Leetcode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		E45BF77924B9857D0051A649 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1150;
				ORGANIZATIONNAME = Quinn;
				TargetAttributes = {
					E45BF78024B9857D0051A649 = {
						CreatedOnToolsVersion = 11.5;
					};
				};
			};
			buildConfigurationList = E45BF77C24B9857D0051A649 /* Build configuration list for PBXProject "Leetcode" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = E45BF77824B9857D0051A649;
			productRefGroup = E45BF78224B9857D0051A649 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				E45BF78024B9857D0051A649 /* Leetcode */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		E45BF77D24B9857D0051A649 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E45BF78524B9857D0051A649 /* main.cpp in Sources */,
				E45BF7D624BB6F600051A649 /* LinkedListCycleII.cpp in Sources */,
				E4F027F024D3062D00039E02 /* IntegerBreak.cpp in Sources */,
				E4F5472324CB379F0079E871 /* AssignCookies.cpp in Sources */,
				E44664EF24C20CAB0008DCEE /* MyQueue.cpp in Sources */,
				E45BF7ED24BDDE0E0051A649 /* RotateList.cpp in Sources */,
				E40E360524C2BCC8001DC2E2 /* MyStack.cpp in Sources */,
				E4553CD424BEFD62002A69D3 /* CopyListwithRandomPointer.cpp in Sources */,
				E4ECFDB724D1C5060035C59A /* SerializeandDeserializeBinaryTree.cpp in Sources */,
				E4C4531624CA094D00E3C956 /* EvaluateReversePolishNotation.cpp in Sources */,
				E45BF7E824BD89D30051A649 /* MergeTwoSortedLists.cpp in Sources */,
				E4C4530E24C9AC9600E3C956 /* ValidateStackSequences.cpp in Sources */,
				E45322B324CE116700067CC4 /* MinimumDepthofBinaryTree.cpp in Sources */,
				E45322A724CD1BB400067CC4 /* BinaryTreeInorderTraversal.cpp in Sources */,
				E4C4530A24C98B7100E3C956 /* SwapNodesinPairs.cpp in Sources */,
				E45322AA24CD201F00067CC4 /* BinaryTreePostorderTraversal.cpp in Sources */,
				E4F5471A24CAE1310079E871 /* DesignCircularQueue.cpp in Sources */,
				E4F5472024CB2EB60079E871 /* FindMedianFromDataStream.cpp in Sources */,
				E45BF7DF24BC76A60051A649 /* OddEvenLinkedList.cpp in Sources */,
				E4C4531324C9CDFE00E3C956 /* BasicCalculator.cpp in Sources */,
				E45BF7D424BB6DBD0051A649 /* LinkedListCycle.cpp in Sources */,
				E42C8F4224D05E4D009979EE /* LowestCommonAncestorofaBinaryTree.cpp in Sources */,
				E42C8F3324CFE553009979EE /* BinaryTreeLevelOrderTraversalII.cpp in Sources */,
				E42C8F3924D00AC4009979EE /* ConstructBinaryTreefromPreorderandInorderTraversal.cpp in Sources */,
				E4F0280824D34AB500039E02 /* Valid Parentheses.cpp in Sources */,
				E45BF7DC24BC636B0051A649 /* RemoveLinkedListElements.cpp in Sources */,
				E45322AD24CD619800067CC4 /* BinaryTreeLevelOrderTraversal.cpp in Sources */,
				E45BF79624B9AAC30051A649 /* Intersection of Two Linked Lists.cpp in Sources */,
				E42C8F3F24D03374009979EE /* PopulatingNextRightPointersinEachNodeII.cpp in Sources */,
				E4EF837524BF34F200D42D2C /* PartitionList.cpp in Sources */,
				E45BF78E24B985C50051A649 /* ReverseLinkedList.cpp in Sources */,
				E414D4F924C7187C00DD41F3 /* AddTwoNumbers.cpp in Sources */,
				E45BF7E224BC84B60051A649 /* PalindromeLinkedList.cpp in Sources */,
				E44664E924C0EF360008DCEE /* RemoveDuplicatesfromSortedList.cpp in Sources */,
				E45322B024CE011E00067CC4 /* MaximumDepthofBinaryTree.cpp in Sources */,
				E45BF7D924BC52AC0051A649 /* RemoveNthNodeFromEndofList.cpp in Sources */,
				E45BF7EB24BDA0AC0051A649 /* AddTwoNumbers.cpp in Sources */,
				E45BF7E524BC9B040051A649 /* DesignLinkedList.cpp in Sources */,
				E40E360924C2E16B001DC2E2 /* MinStack.cpp in Sources */,
				E45BF79224B9903E0051A649 /* Reverse Linked List II.cpp in Sources */,
				E45322A224CD0C9800067CC4 /* BinaryTreePreorderTraversal.cpp in Sources */,
				E415BD1724CC96CA003D4899 /* ReverseString.cpp in Sources */,
				E42C8F3624CFED05009979EE /* ConstructBinaryTreefromInorderandPostorderTraversal.cpp in Sources */,
				E4553CD124BEDD41002A69D3 /* FlattenaMultilevelDoublyLinkedList.cpp in Sources */,
				E4F5471D24CB137E0079E871 /* KthLargestElementinanArray.cpp in Sources */,
				E42C8F3C24D01A22009979EE /* PopulatingNextRightPointersinEachNode.cpp in Sources */,
				E4F0280C24D3578100039E02 /* DailyTemperatures.cpp in Sources */,
				E45322B924CED49300067CC4 /* PathSum.cpp in Sources */,
				E45322B624CEC35500067CC4 /* SymmetricTree.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		E45BF78624B9857D0051A649 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		E45BF78724B9857D0051A649 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
		E45BF78924B9857D0051A649 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		E45BF78A24B9857D0051A649 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		E45BF77C24B9857D0051A649 /* Build configuration list for PBXProject "Leetcode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E45BF78624B9857D0051A649 /* Debug */,
				E45BF78724B9857D0051A649 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E45BF78824B9857D0051A649 /* Build configuration list for PBXNativeTarget "Leetcode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E45BF78924B9857D0051A649 /* Debug */,
				E45BF78A24B9857D0051A649 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = E45BF77924B9857D0051A649 /* Project object */;
}
